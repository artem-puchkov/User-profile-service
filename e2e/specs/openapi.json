{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Actuator",
      "description": "Monitor and interact",
      "externalDocs": {
        "description": "Spring Boot Actuator Web API Documentation",
        "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
      }
    }
  ],
  "paths": {
    "/users/{id}": {
      "get": {
        "tags": [
          "user-profile-controller"
        ],
        "operationId": "findUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-profile-controller"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/details": {
      "get": {
        "tags": [
          "user-profile-controller"
        ],
        "operationId": "findUserDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-profile-controller"
        ],
        "operationId": "updateUserDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "user-profile-controller"
        ],
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/prometheus": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'prometheus'",
        "operationId": "prometheus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain;version=0.0.4;charset=utf-8": {
                "schema": {
                  "type": "object"
                }
              },
              "application/openmetrics-text;version=1.0.0;charset=utf-8": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/liquibase": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'liquibase'",
        "operationId": "liquibase",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health/{*path}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'health-path'",
        "operationId": "health-path",
        "parameters": [
          {
            "name": "*path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'health'",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthInfo"
                }
              }
            }
          }
        }
      }
    },
    "/actuator": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserDetailsDto": {
        "required": [
          "telegramId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "telegramId": {
            "type": "string"
          },
          "mobilePhone": {
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserDto": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "userDetailsDto"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "pattern": "^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$",
            "type": "string"
          },
          "userDetailsDto": {
            "$ref": "#/components/schemas/UserDetailsDto"
          }
        }
      },
      "HealthInfo": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "components": {
            "$ref": "#/components/schemas/Components"
          }
        }
      },
      "Components": {
        "type": "object",
        "properties": {
          "db": {
            "$ref": "#/components/schemas/DbComponent"
          },
          "diskSpace": {
            "$ref": "#/components/schemas/DiskSpaceComponent"
          },
          "ping": {
            "$ref": "#/components/schemas/PingComponent"
          }
        }
      },
      "DbComponent": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "details": {
            "$ref": "#/components/schemas/DbDetails"
          }
        }
      },
      "DbDetails": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string"
          },
          "validationQuery": {
            "type": "string"
          }
        }
      },
      "DiskSpaceComponent": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "details": {
            "$ref": "#/components/schemas/DiskSpaceDetails"
          }
        }
      },
      "DiskSpaceDetails": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "free": {
            "type": "integer",
            "format": "int64"
          },
          "threshold": {
            "type": "integer",
            "format": "int64"
          },
          "path": {
            "type": "string"
          },
          "exists": {
            "type": "boolean"
          }
        }
      },
      "PingComponent": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        }
      },
      "Status": {
        "type": "string",
        "enum": [
          "UP",
          "DOWN",
          "UNKNOWN",
          "OUT_OF_SERVICE"
        ]
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      }
    }
  }
}